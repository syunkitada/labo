imports:
  - infra/local/remote.yaml

common:
  namespace: srv6vrf2
  host: 192.168.210.11
  host_user: admin
  host_pass: admin
  nfs_path: /mnt/nfs
  insecure_docker_registry: docker-registry.local.example.com:5000

ipam:
  hv_network:
    subnet: 10.10.20.0/24
    kind: l3
  t1vm_network1:
    subnet: 10.100.0.0/24
    kind: l2
  t1vm_network2:
    subnet: 10.100.1.0/24
    kind: l2
  t2vm_network1:
    subnet: 10.100.0.0/24
    kind: l2
  t2vm_network2:
    subnet: 10.100.1.0/24
    kind: l2

template_map:
  node:
    kind: container
    image: docker-registry.local.example.com:5000/labo/ubuntu20-nwnode:latest
    mtu: 9000
    sysctl_map:
      net.ipv4.tcp_l3mdev_accept: 1
      net.ipv4.udp_l3mdev_accept: 1
      net.vrf.strict_mode: 1
      net.ipv6.conf.default.disable_ipv6: 0
      net.ipv6.conf.all.disable_ipv6: 0
      net.ipv6.conf.default.accept_ra: 0
      net.ipv6.conf.all.accept_ra: 0
      net.ipv4.conf.all.rp_filter: 0
      net.ipv4.conf.all.forwarding: 1
      net.ipv4.conf.default.forwarding: 1
      net.ipv6.conf.all.forwarding: 1
      net.ipv6.conf.default.forwarding: 1
      net.ipv6.conf.all.seg6_enabled: 1
      net.ipv6.conf.default.seg6_enabled: 1
  hv:
    lo_ips:
      - inet: <%=assign_inet4(hv_network)%>
    frr:
      id: "<%=lo_ips.0.ip%>"
      asn: "<%=ipv4_to_asn(lo_ips.0.ip)%>"
      bgp_peer_groups:
        - name: ADMIN
        - name: VM
      ipv4_networks:
        - <%=lo_ips.0.inet%>
      use_srv6_vpn: true
    sid:
      inet: <%=asn_to_sid(frr.asn)%>
      dev: lo
  vm:
    mtu: 1500
    routes:
      - dst: default
        via: <%=gateway_ip(_links.0.peer_ips.0.network)%>

nodes:
  - name: HV1
    templates:
      - node
      - hv
    links:
      - peer: HV2
        bgp_peer_group: ADMIN
    vm_links:
      - peer: t1vm1
        peer_ips:
          - inet: <%=assign_inet4(t1vm_network1)%>
      - peer: t2vm1
        peer_ips:
          - inet: <%=assign_inet4(t2vm_network1)%>
    vms:
      - name: t1vm1
        templates:
          - node
          - vm
        tests:
          - kind: ping
            targets:
              - name: t1vm2
                dst: <%=_node_map.t1vm2._links.0.peer_ips.0.ip%>
      - name: t2vm1
        templates:
          - node
          - vm
    cmds:
      - ip link add dev vrf10 type vrf table 10 | echo "ignored"
      - ip link set dev vrf10 up
      - ip link set dev HV1_0_t1vm1 master vrf10
      - ip addr add 10.100.0.1/24 dev HV1_0_t1vm1 | echo "ignored"
      - ip route add 10.100.0.2 dev HV1_0_t1vm1 table 10 | echo "ignored"
      - sysctl -w net.ipv4.conf.HV1_0_t1vm1.proxy_arp=1
  - name: HV2
    templates:
      - node
      - hv
    vm_links:
      - peer: t1vm2
        peer_ips:
          - inet: <%=assign_inet4(t1vm_network2)%>
      - peer: t2vm2
        peer_ips:
          - inet: <%=assign_inet4(t2vm_network2)%>
    vms:
      - name: t1vm2
        templates:
          - node
          - vm
      - name: t2vm2
        templates:
          - node
          - vm
    cmds:
      - ip link add dev vrf10 type vrf table 10 | echo "ignored"
      - ip link set dev vrf10 up
      - ip link set dev HV2_0_t1vm2 master vrf10
      - ip addr add 10.100.1.1/24 dev HV2_0_t1vm2 | echo "ignored"
      - ip route add 10.100.1.2 dev HV1_0_t1vm2 table 10 | echo "ignored"
      - sysctl -w net.ipv4.conf.HV2_0_t1vm2.proxy_arp=1
