# clos構成でvxlan, vpcgw付き
imports:
  - infra/ovs/vxlan/vxlan4.1.yaml

ipam:
  t1vm_network1:
    subnet: 10.100.0.0/24
    kind: l2
  t2vm_network1:
    subnet: 10.100.0.0/24
    kind: l2
  t1vip_network1:
    subnet: 10.100.10.0/24
    kind: l3
  tunvip_network1:
    subnet: 10.200.10.0/24
    kind: l3
  evip_network1:
    subnet: 10.110.10.0/24
    kind: l3

vpc_map:
  vpc1:
    id: 5000
    network_gw_map:
      gw1:
        - name: t1vm_network1
  vpc2:
    id: 6000
    network_gw_map:
      gw1:
        - name: t2vm_network1

vip_map:
  t1vip1:
    tenant: 5000
    vip:
      inet: <%=assign_inet4(t1vip_network1)%>
    tunvip: # tunnel終端用のipをvipごとに持たせる
      inet: <%=assign_inet4(tunvip_network1)%>
    members:
      - name: t1vm2

template_map:
  hv:
    ovs:
      admin_ips:
        - inet: <%=assign_inet4(ovsadmin_network1)%>
      bridges:
        - name: br-ex
          kind: external-ha
        - name: br-t1
          kind: vxlan-tenant-vm
          tenant: 5000
        - name: br-t2
          kind: vxlan-tenant-vm
          tenant: 6000
          disable_tenant_fullmesh: true
    frr:
      route_map:
        VM-v4:
          policy: permit
          order: 5
          version: 4
          prefix_list:
            - seq 6 permit <%=ipam.ovsadmin_network1.subnet%> le 32
      ipv4_networks:
        - <%=l3admin.ips.0.inet%>
        - <%=ovs.admin_ips.0.inet%>
  gw:
    vpcgw: gw1
    ovs:
      admin_ips:
        - inet: <%=vpcgw_map.gw1.vtep.inet%>
      bridges:
        - name: br-ex
          kind: external-ha
          links:
            - peer: br-aclgw
              flows:
                - kind: ingress
            - peer: br-aclex
              flows:
                - kind: egress
        - name: br-tun
          kind: vxlan-tenant-vpcgw
          links:
            - peer: br-aclgw
              flows:
                - kind: ingress
            - peer: br-aclvpc
              flows:
                - kind: egress
        - name: br-aclgw
          kind: aclgw
          links:
            - peer: br-aclvpc
              flows:
                - kind: ingress
                  match_kind: vpc-eip
            - peer: br-aclex
              flows:
                - kind: ingress
        - name: br-aclex
        - name: br-aclvpc
    frr:
      route_map:
        VM-v4:
          policy: permit
          order: 5
          version: 4
          prefix_list:
            - seq 5 permit <%=ipam.ovsadmin_network1.subnet%> le 32
            - seq 6 permit <%=ipam.eip_network1.subnet%> le 32
      ipv4_networks:
        - <%=l3admin.ips.0.inet%>
        - <%=ovs.admin_ips.0.inet%>
        - <%=ipam.eip_network1.subnet%>
  lb:
    ovs:
      admin_ips:
        - inet: <%=vip_map.t1vip1.tunvip.inet%>
      bridges:
        - name: br-ex
          kind: external-ha
        - name: br-t1
          kind: vxlan-tenant-lb
          tenant: 5000
  vm:
    mtu: 1500
    routes:
      - dst: default
        via: <%=gateway_ip(_links.0.peer_ips.0.network)%>

node_map:
  CL1:
    tests:
      - kind: ping
        targets:
          - name: HV1.ovs
            dst: <%=_node_map.HV1.ovs.admin_ips.0.ip%>
          - name: HV2.ovs
            dst: <%=_node_map.HV2.ovs.admin_ips.0.ip%>
          - name: GW1.ovs
            dst: <%=_node_map.GW1.ovs.admin_ips.0.ip%>
          - name: t1vm1.eip
            dst: <%=_node_map.t1vm1._links.0.peer_ips.0.eip%>
          - name: t1vm2.eip
            dst: <%=_node_map.t1vm2._links.0.peer_ips.0.eip%>
          - name: t2vm1.eip
            dst: <%=_node_map.t2vm1._links.0.peer_ips.0.eip%>
          - name: t2vm2.eip
            dst: <%=_node_map.t2vm2._links.0.peer_ips.0.eip%>
  HV1:
    vm_links:
      - peer: t1vm1
        peer_ips:
          - inet: <%=assign_inet4(t1vm_network1)%>
            eip: <%=assign_ip4(eip_network1)%>
      - peer: t2vm1
        peer_ips:
          - inet: <%=assign_inet4(t2vm_network1)%>
            eip: <%=assign_ip4(eip_network1)%>
    vms:
      - name: t1vm1
        tenant: 5000
        templates:
          - node
          - vm
        tests:
          - kind: ping
            targets:
              - name: t1vm2
                dst: <%=_node_map.t1vm2._links.0.peer_ips.0.ip%>
              - name: t2vm1.eip
                dst: <%=_node_map.t2vm1._links.0.peer_ips.0.eip%>
              - name: t2vm2.eip
                dst: <%=_node_map.t2vm2._links.0.peer_ips.0.eip%>
      - name: t2vm1
        tenant: 6000
        templates:
          - node
          - vm
        tests:
          - kind: ping
            targets:
              - name: t2vm2
                dst: <%=_node_map.t2vm2._links.0.peer_ips.0.ip%>
  HV2:
    vm_links:
      - peer: t1vm2
        peer_ips:
          - inet: <%=assign_inet4(t1vm_network1)%>
            eip: <%=assign_ip4(eip_network1)%>
      - peer: t2vm2
        peer_ips:
          - inet: <%=assign_inet4(t2vm_network1)%>
            eip: <%=assign_ip4(eip_network1)%>
    vms:
      - name: t1vm2
        tenant: 5000
        templates:
          - node
          - vm
      - name: t2vm2
        tenant: 6000
        templates:
          - node
          - vm
