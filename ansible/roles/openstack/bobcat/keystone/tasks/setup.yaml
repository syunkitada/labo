- name: Put keystone.conf
  become: true
  template:
    src: keystone.conf.j2
    dest: /etc/keystone/keystone.conf
  register: keystone_conf

- name: Put adminrc
  become: true
  template:
    src: adminrc.j2
    dest: /etc/adminrc

- name: Sync DB
  become: true
  shell: |
    set -e

    mysql -e 'CREATE DATABASE IF NOT EXISTS keystone'

    /opt/keystone/bin/keystone-manage db_sync

    /opt/keystone/bin/keystone-manage fernet_setup --keystone-user nobody --keystone-group nobody
    /opt/keystone/bin/keystone-manage credential_setup --keystone-user nobody --keystone-group nobody

    /opt/keystone/bin/keystone-manage bootstrap --bootstrap-password "{{ keystone_admin_password }}" \
      --bootstrap-admin-url "http://{{ keystone_host }}:5000/v3/" \
      --bootstrap-internal-url "http://{{ keystone_host }}:5000/v3/" \
      --bootstrap-public-url "http://{{ keystone_host }}:5000/v3/" \
      --bootstrap-region-id "{{ keystone_region }}"

- name: Start keystone
  become: true
  when: keystone_runtime == "native"
  shell: |
    systemctl status keystone-public || systemd-run --unit keystone-public -- \
      /opt/keystone/bin/keystone-wsgi-public --port 5000

- name: Restart keystone
  become: true
  when: keystone_runtime == "native"
  when: keystone_conf.changed
  shell: |
    systemctl restart keystone-public

- name: Put wsgi-keystone.conf
  become: true
  when: keystone_runtime == "httpd"
  template:
    src: wsgi-keystone.conf.j2
    dest: /etc/httpd/conf.d/wsgi-keystone.conf
  register: wsgi_keystone_conf

- name: Start keystone httpd
  become: true
  when: keystone_runtime == "httpd"
  shell: |
    systemctl start httpd

- name: Restart keystone httpd
  become: true
  when: keystone_runtime == "httpd"
  when: keystone_conf.changed or wsgi_keystone_conf.changed
  shell: |
    systemctl restart httpd

- name: Create user
  become: true
  shell: |
    set -e

    source /etc/adminrc

    timeout 5 bash -c 'until openstack token issue; do sleep 1; done'

    openstack project show service || openstack project create --domain default --description "Service Project" service
    openstack user show "{{ keystone_service_user }}" || openstack user create --domain default --password "{{ keystone_service_password }}" "{{ keystone_service_user }}"
    openstack role add --project service --user "{{ keystone_service_user }}" admin
