# clos構成でvxlan
imports:
  - infras/ovs/vxlan/vxlan3.1.yaml

ipam:
  t1vm_network1:
    subnet: 10.100.0.0/24
    kind: l2
  t2vm_network1:
    subnet: 10.100.0.0/24
    kind: l2

vpc_map:
  vpc1:
    id: 5000
    network_gw_map:
      gw1:
        - name: t1vm_network1
  vpc2:
    id: 6000
    network_gw_map:
      gw1:
        - name: t2vm_network1

template_map:
  hv:
    ansible:
      vars:
        frr_route_map:
          VM-v4:
            policy: permit
            order: 5
            version: 4
            prefix_list:
              - seq 6 permit <%=ipam.ovsadmin_network1.subnet%> le 32

  vm:
    mtu: 1500
    routes:
      - dst: default
        via: <%=gateway_ip(_links.0.peer_ips.0.network)%>

node_map:
  HV1:
    ansible:
      vars:
        ovs_vxlan:
          vxlan_bridges:
            - name: br-t1
              kind: vxlan
              vxlan_id: 5000
              ports:
                - name: <%=child_links.0.link_name%>
                  peer_mac: <%=child_links.0.peer_mac%>
                  ips:
                    - <%=child_links.0.peer_ips.0.ip%>
              routes:
                - ip: <%=_node_map.t1vm2._links.0.peer_ips.0.ip%>
                  dst: <%=_node_map.HV2.vars.ovs_admin_ip%>
            - name: br-t2
              kind: vxlan
              vxlan_id: 6000
              ports:
                - name: <%=child_links.1.link_name%>
                  peer_mac: <%=child_links.1.peer_mac%>
                  ips:
                    - <%=child_links.1.peer_ips.0.ip%>
              routes:
                - ip: <%=_node_map.t2vm2._links.0.peer_ips.0.ip%>
                  dst: <%=_node_map.HV2.vars.ovs_admin_ip%>
    child_links:
      - peer: t1vm1
        peer_ips:
          - inet: <%=assign_inet4(t1vm_network1)%>
      - peer: t2vm1
        peer_ips:
          - inet: <%=assign_inet4(t2vm_network1)%>
    childs:
      - name: t1vm1
        vpc_id: 5000
        templates:
          - node
          - vm
        tests:
          - kind: ping
            targets:
              - name: t1vm2
                dst: <%=_node_map.t1vm2._links.0.peer_ips.0.ip%>
      - name: t2vm1
        vpc_id: 6000
        templates:
          - node
          - vm
        tests:
          - kind: ping
            targets:
              - name: t2vm2
                dst: <%=_node_map.t2vm2._links.0.peer_ips.0.ip%>
  HV2:
    ansible:
      vars:
        ovs_vxlan:
          vxlan_bridges:
            - name: br-t1
              kind: vxlan
              vxlan_id: 5000
              ports:
                - name: <%=child_links.0.link_name%>
                  peer_mac: <%=child_links.0.peer_mac%>
                  ips:
                    - <%=child_links.0.peer_ips.0.ip%>
              routes:
                - ip: <%=_node_map.t1vm1._links.0.peer_ips.0.ip%>
                  dst: <%=_node_map.HV1.vars.ovs_admin_ip%>
            - name: br-t2
              kind: vxlan
              vxlan_id: 6000
              ports:
                - name: <%=child_links.1.link_name%>
                  peer_mac: <%=child_links.1.peer_mac%>
                  ips:
                    - <%=child_links.1.peer_ips.0.ip%>
              routes:
                - ip: <%=_node_map.t2vm1._links.0.peer_ips.0.ip%>
                  dst: <%=_node_map.HV1.vars.ovs_admin_ip%>
    child_links:
      - peer: t1vm2
        peer_ips:
          - inet: <%=assign_inet4(t1vm_network1)%>
      - peer: t2vm2
        peer_ips:
          - inet: <%=assign_inet4(t2vm_network1)%>
    childs:
      - name: t1vm2
        vpc_id: 5000
        templates:
          - node
          - vm
      - name: t2vm2
        vpc_id: 6000
        templates:
          - node
          - vm
