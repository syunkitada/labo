# vxlan1のvxlan optionをremote_ip=flowにした構成です
common:
  host: VM1.rocky8.example.com

ipam:
  network1:
    subnet: 10.10.1.0/24
    kind: l2
  t1vm_network1:
    subnet: 10.100.0.0/24
    kind: l2
  t2vm_network1:
    subnet: 10.100.0.0/24
    kind: l2

template_map:
  node:
    kind: container
    image: docker-registry.example.com:5000/labo/rocky8-nwnode:latest
    mtu: 1500
  vm:
    mtu: 1500
    routes:
      - dst: default
        via: <%=gateway_ip(_links.0.peer_ips.0.network)%>

nodes:
  - name: n1
    templates:
      - node
    links:
      - peer: n2
        ips:
          - inet: <%=assign_inet4(network1)%>
        peer_ips:
          - inet: <%=assign_inet4(network1)%>
    child_links:
      - peer: t1vm1
        peer_ips:
          - inet: <%=assign_inet4(t1vm_network1)%>
      - peer: t2vm1
        peer_ips:
          - inet: <%=assign_inet4(t2vm_network1)%>
    childs:
      - name: t1vm1
        templates:
          - node
          - vm
        tests:
          - kind: ping
            targets:
              - name: t1vm2
                dst: <%=_node_map.t1vm2._links.0.peer_ips.0.ip%>
      - name: t2vm1
        templates:
          - node
          - vm
        tests:
          - kind: ping
            targets:
              - name: t2vm2
                dst: <%=_node_map.t2vm2._links.0.peer_ips.0.ip%>
    cmds:
      - systemctl start openvswitch
      - ovs-vsctl --may-exist add-br tenant1
      - ovs-vsctl --may-exist add-br tenant2
      - ip link set tenant1 up
      - ip link set tenant2 up
      - ovs-vsctl --may-exist add-port tenant1 n1_0_t1vm1
      - ovs-vsctl --may-exist add-port tenant2 n1_1_t2vm1
      - ovs-vsctl --may-exist add-port tenant1 vxlan1 -- set interface vxlan1 type=vxlan options:remote_ip=flow options:key=5000
      - ovs-vsctl --may-exist add-port tenant2 vxlan2 -- set interface vxlan2 type=vxlan options:remote_ip=flow options:key=6000
      - ovs-ofctl add-flow tenant1 "in_port=n1_0_t1vm1 actions=set_field:<%=links.0.peer_ips.0.ip%>->tun_dst,vxlan1"
      - ovs-ofctl add-flow tenant1 "in_port=vxlan1 actions=n1_0_t1vm1"
      - ovs-ofctl add-flow tenant2 "in_port=n1_1_t2vm1 actions=set_field:<%=links.0.peer_ips.0.ip%>->tun_dst,vxlan2"
      - ovs-ofctl add-flow tenant2 "in_port=vxlan2 actions=n1_1_t2vm1"
  - name: n2
    templates:
      - node
    child_links:
      - peer: t1vm2
        peer_ips:
          - inet: <%=assign_inet4(t1vm_network1)%>
      - peer: t2vm2
        peer_ips:
          - inet: <%=assign_inet4(t2vm_network1)%>
    childs:
      - name: t1vm2
        templates:
          - node
          - vm
      - name: t2vm2
        templates:
          - node
          - vm
    cmds:
      - systemctl start openvswitch
      - ovs-vsctl --may-exist add-br tenant1
      - ovs-vsctl --may-exist add-br tenant2
      - ip link set tenant1 up
      - ip link set tenant2 up
      - ovs-vsctl --may-exist add-port tenant1 n2_0_t1vm2
      - ovs-vsctl --may-exist add-port tenant2 n2_1_t2vm2
      - ovs-vsctl --may-exist add-port tenant1 vxlan1 -- set interface vxlan1 type=vxlan options:remote_ip=flow options:key=5000
      - ovs-vsctl --may-exist add-port tenant2 vxlan2 -- set interface vxlan2 type=vxlan options:remote_ip=flow options:key=6000
      - ovs-ofctl add-flow tenant1 "in_port=n2_0_t1vm2 actions=set_field:<%=_links.0.ips.0.ip%>->tun_dst,vxlan1"
      - ovs-ofctl add-flow tenant1 "in_port=vxlan1 actions=n2_0_t1vm2"
      - ovs-ofctl add-flow tenant2 "in_port=n2_1_t2vm2 actions=set_field:<%=_links.0.ips.0.ip%>->tun_dst,vxlan2"
      - ovs-ofctl add-flow tenant2 "in_port=vxlan2 actions=n2_1_t2vm2"
